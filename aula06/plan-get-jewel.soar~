# Propose*get*jewel:
sp {aula06*propose*plan*get*jewel
   (state <s> ^creature <creature>
             -^success <d>
             -^risk <risk>)
   
   (<creature> ^SENSOR.VISUAL.ENTITY <entity>)
   (<entity> ^TYPE JEWEL) 
   (<entity> ^DISTANCE <jewelDistance> < 30)
   (<entity> ^NAME <jewelName>)
     
-->
   (<s> ^operator <o>)
   (<o> ^name planGetJewel)
   (<o> ^parameter <jewel>)
   (<jewel> ^NAME <jewelName>)
   (<jewel> ^DISTANCE <jewelDistance>)
   (write (crlf) |>>>Propose<<< get-Jewel simulation! |)
 }
   
# Apply
sp {aula06*apply*plan*get*jewel
   (state <s> ^creature <creature>
              ^planning <planning>
              ^operator <o>
             -^success <d>)
   
   (<creature> ^LEAFLETS <lf>)
   (<lf> ^REMAINING-TOTAL <lfA>
         ^REMAINING-JEWEL <rj>)
   (<rj> ^JEWEL <jewel>)
   
   (<o> ^name planGetJewel)
   (<o> ^parameter.NAME <jewelName>)
   
   (<planning> ^steps <steps>
               ^parameters <param>)
   (<param> ^last-step <last-step>)
   
   (<creature> ^SENSOR <sensor>)
   (<sensor> ^VISUAL <visual>)
   (<visual> ^ENTITY <entity>)
   (<entity> ^TYPE JEWEL
             ^COLOR <color>
             ^NAME <jewelName>)
   (<jewel> ^TYPE <color>
            ^REMAINING <remaining>)
-->
   (<step> ^DESC getJewel
           ^TYPE GET
           ^STEP-NUM (+ <last-step> 1)
           ^COMMAND <command>)
   (<command> ^Name <jewelName>)
   (<command> ^Color <color>)
   (<steps> ^step <step>)
   (<param> ^last-step (+ <last-step> 1)
                        <last-step> -)
   (<lf> ^REMAINING-TOTAL (- <lfA> 1)
                           <lfA> -)
   (<jewel> ^REMAINING (- <remaining> 1)
                           <remaining> -)
   (<visual> ^ENTITY <entity> -) # Simulate entity remove
   
   (write (crlf) |>>>Apply<<< get-Jewel simulation! |)
}
